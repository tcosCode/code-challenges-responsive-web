---
import github from "@src/assets/github.svg";
import preview from "@src/assets/preview.svg";

interface Project {
  id: string;
  slug: string;
  title: string;
  description: string;
  learnings: string[];
}

const { id, slug, title, description, learnings } = Astro.props as Project;
const { project } = Astro.params;
---

<article>
  
    <div class="card">
      <h3>#{id.toString().padStart(2, "0")}</h3>

      <img
        src={`/projects/${id}.webp`}
        alt=`Image of the project ${title}`
        loading="lazy"
      />

      <div class="card-details">
        <a href=""> <h1>{title}</h1> </a>
        <p>{description}</p>
        <ul>
          {learnings.map((learning) => <li>{learning}</li>)}
        </ul>
        <div class="buttons">
          <a href={`github.com`}>
            <img src={github.src} alt=`Github code for project ${title}` /> Code</a
          >
          <a href={`/${slug}`}
            ><img
              src={preview.src}
              alt=`Github code for project ${title}`
            />Demo</a
          >
        </div>
      </div>
    </div>

  <style>
    .card {
      position: relative;
      margin-top: var(--spacing-md);
    }

    h3 {
      position: absolute;
      top: 0.4rem;
      left: 0.5rem;
      rotate: -15deg;
      color: var(--font-color-light);
      font-size: var(--font-size-md);
      margin: 0;
      transition: transform 0.2s ease-in-out;
      z-index: 10;
    }

    .card > img {
      border-radius: 1rem;
      width: 100%;
      height: auto;
      transition: filter 0.2s ease-in-out;
      cursor: pointer;
      aspect-ratio: 12/9;
    }

    .card:hover h3 {
      transform: scale(1.3);
    }

    .card > img:hover {
      filter: drop-shadow(0 0 0.5rem var(--primary-color));
    }

    .card-details {
      padding: var(--spacing-md);
    }

    h1 {
      color: var(--font-color);
      font-size: var(--font-size-lg);
      margin-bottom: var(--spacing-sm);
      line-height: 1.2;
    }

    h1:hover {
      color: var(--secondary-color);
    }

    p {
      color: var(--font-color-light);
      margin-bottom: var(--spacing-md);
    }

    ul {
      display: flex;
      flex-wrap: wrap;
      gap: var(--spacing-sm);
      margin-bottom: var(--spacing-md);
      list-style: none;
    }

    li {
      font-size: var(--font-size-sm);
      font-weight: 300;
      color: rgb(98, 98, 98);
      background-color: rgb(203, 203, 204);
      border-radius: 2rem;
      padding: 0.3rem 0.7rem;
      margin-bottom: var(--spacing-sm);
    }

    .buttons {
      display: flex;
      gap: var(--spacing-sm);
    }

    .buttons a {
      --border-color: var(--font-color);
      display: flex;
      align-items: center;
      gap: 0.4rem;
      background-color: transparent;
      border-radius: 0.5rem;
      color: var(--font-color);
      padding: 0.4rem 0.6rem;
      text-decoration: none;
      border: 1px solid var(--border-color);
      transition: background-color 0.2s ease-in-out;
    }

    .buttons a:nth-child(1) img {
      width: 22px;
      height: 22px;
    }

    .buttons a:nth-child(2) {
      --border-color: rgba(var(--primary-color-rgb));
    }

    .buttons a:nth-child(1):hover {
      background-color: rgb(221, 221, 222);
    }

    .buttons a:nth-child(2):hover {
      background-color: rgba(var(--primary-color-rgb), 0.2);
    }
  </style>
</article>
